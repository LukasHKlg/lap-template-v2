@rendermode InteractiveServer
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<FluentHeader>
	<a class="header-title" href="/">OnlineShop</a>
	<FluentSpacer />
	<AuthorizeView>
		<Authorized>
			<FluentStack HorizontalAlignment="HorizontalAlignment.End"
						 VerticalAlignment="VerticalAlignment.Center">
				<FluentProfileMenu FullName="@context.User.Identity.Name" EMail="@context.User.Identity.Name" OnHeaderButtonClick="@(() => RedirectTo("logout"))"> 
					<StartTemplate>@context.User.Identity.Name</StartTemplate>
				</FluentProfileMenu>
			</FluentStack>
		</Authorized>
		<NotAuthorized>
			<FluentButton Appearance="Appearance.Lightweight" Type="ButtonType.Button" OnClick="@(() => RedirectTo("login"))">Login</FluentButton>
		</NotAuthorized>
	</AuthorizeView>
	<FluentSpacer Width="15" />
	<FluentIcon Value="@(new Icons.Regular.Size20.Settings())"
				Color="Color.Lightweight"
				OnClick="@ShowSettingsAsync" />
	<FluentIcon Value="@(new Icons.Regular.Size20.Cart())"
				Color="Color.Lightweight"
				OnClick="@(() => RedirectTo("cart"))" />
</FluentHeader>

@code {
	private async Task ShowSettingsAsync()
	{
		await DialogService.ShowPanelAsync<Pages.Settings>(new DialogParameters()
			{
				Title = "Settings",
				Alignment = HorizontalAlignment.Right,
				SecondaryAction = null,
			});
	}

	private void RedirectTo(string path)
	{
		NavigationManager.NavigateTo(path);
	}
}


<style>
	.header-title{
		text-decoration: none;
		color: unset;
	}
</style>